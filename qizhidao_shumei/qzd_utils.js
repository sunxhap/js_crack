
var md5 = require('md5-node');
const zlib = require('zlib');

function qizhidao_getLocalsmid_uuid() {
    return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'['replace'](/[xy]/g, function (_0x19651c) {
        var _0x316c06 = 0x10 * Math['random']() | 0x0;
        return ('x' == _0x19651c ? _0x316c06 : 0x3 & _0x316c06 | 0x8)['toString'](0x10);
    });
}

function getNowDate() {
    var date = new Date();
    var sign2 = "";
    var year = date.getFullYear() // 年
    var month = date.getMonth() + 1; // 月
    var day = date.getDate(); // 日
    var hour = date.getHours(); // 时
    var minutes = date.getMinutes(); // 分
    var seconds = date.getSeconds() //秒
    var weekArr = ['星期一', '星期二', '星期三', '星期四', '星期五', '星期六', '星期天'];
    var week = weekArr[date.getDay()];
    // 给一位数的数据前面加 “0”
    if (month >= 1 && month <= 9) {
        month = "0" + month;
    }
    if (day >= 0 && day <= 9) {
        day = "0" + day;
    }
    if (hour >= 0 && hour <= 9) {
        hour = "0" + hour;
    }
    if (minutes >= 0 && minutes <= 9) {
        minutes = "0" + minutes;
    }
    if (seconds >= 0 && seconds <= 9) {
        seconds = "0" + seconds;
    }
    return year + "0" + month + day + hour + sign2 + minutes + sign2 + seconds;

}

function getLocalsmid() {
    smid_data = getNowDate();
    smid_uuid = qizhidao_getLocalsmid_uuid();   //  'c5c38ead-2938-408b-8328-b754a93d524d'

    _0x4d8ff0 = smid_data + md5(smid_uuid) + '00';

    // console.log(_0x4d8ff0)
    _0x4ab2a6 = md5('smsk_web_' + _0x4d8ff0)['substr'](0, 14);

    return _0x4d8ff0 + _0x4ab2a6 + '0'

}


function qzd_0x18c848(_0x5980e5) {
    // md5 head
    if ('[object\x20Object]' == Object['prototype']['toString']['call'](_0x5980e5)) {
        var _0x20eb05 = [];
        return Object['keys'](_0x5980e5)['sort']()['forEach'](function (_0x3dc205) {
            'number' == typeof _0x5980e5[_0x3dc205] ? _0x20eb05['push'](qzd_0x18c848(''['concat'](0x2710 * _0x5980e5[_0x3dc205]))) : _0x20eb05['push'](qzd_0x18c848(''['concat'](_0x5980e5[_0x3dc205])));
        }),
            _0x20eb05['join']('');
    }
    return _0x5980e5 ? _0x5980e5['toString']() : '';
}


function qizhidao_des(_0x6f7ccb, _0x252245, _0x104ba1, _0x1aac56, _0x446fff, _0x49168f) {
    var _0x1ea114, _0x229ea9, _0x387e5c, _0x111fbd, _0x56551c, _0x39c632, _0x59ae05, _0x4e0044, _0x2abe13, _0x5443e4,
        _0x40eb43, _0x1f93bf, _0x29869b, _0x2adfe8,
        _0x3dc4f7 = new Array(0x1010400, 0x0, 0x10000, 0x1010404, 0x1010004, 0x10404, 0x4, 0x10000, 0x400, 0x1010400, 0x1010404, 0x400, 0x1000404, 0x1010004, 0x1000000, 0x4, 0x404, 0x1000400, 0x1000400, 0x10400, 0x10400, 0x1010000, 0x1010000, 0x1000404, 0x10004, 0x1000004, 0x1000004, 0x10004, 0x0, 0x404, 0x10404, 0x1000000, 0x10000, 0x1010404, 0x4, 0x1010000, 0x1010400, 0x1000000, 0x1000000, 0x400, 0x1010004, 0x10000, 0x10400, 0x1000004, 0x400, 0x4, 0x1000404, 0x10404, 0x1010404, 0x10004, 0x1010000, 0x1000404, 0x1000004, 0x404, 0x10404, 0x1010400, 0x404, 0x1000400, 0x1000400, 0x0, 0x10004, 0x10400, 0x0, 0x1010004),
        _0x3d7968 = new Array(-0x7fef7fe0, -0x7fff8000, 0x8000, 0x108020, 0x100000, 0x20, -0x7fefffe0, -0x7fff7fe0, -0x7fffffe0, -0x7fef7fe0, -0x7fef8000, -0x80000000, -0x7fff8000, 0x100000, 0x20, -0x7fefffe0, 0x108000, 0x100020, -0x7fff7fe0, 0x0, -0x80000000, 0x8000, 0x108020, -0x7ff00000, 0x100020, -0x7fffffe0, 0x0, 0x108000, 0x8020, -0x7fef8000, -0x7ff00000, 0x8020, 0x0, 0x108020, -0x7fefffe0, 0x100000, -0x7fff7fe0, -0x7ff00000, -0x7fef8000, 0x8000, -0x7ff00000, -0x7fff8000, 0x20, -0x7fef7fe0, 0x108020, 0x20, 0x8000, -0x80000000, 0x8020, -0x7fef8000, 0x100000, -0x7fffffe0, 0x100020, -0x7fff7fe0, -0x7fffffe0, 0x100020, 0x108000, 0x0, -0x7fff8000, 0x8020, -0x80000000, -0x7fefffe0, -0x7fef7fe0, 0x108000),
        _0x51f6fe = new Array(0x208, 0x8020200, 0x0, 0x8020008, 0x8000200, 0x0, 0x20208, 0x8000200, 0x20008, 0x8000008, 0x8000008, 0x20000, 0x8020208, 0x20008, 0x8020000, 0x208, 0x8000000, 0x8, 0x8020200, 0x200, 0x20200, 0x8020000, 0x8020008, 0x20208, 0x8000208, 0x20200, 0x20000, 0x8000208, 0x8, 0x8020208, 0x200, 0x8000000, 0x8020200, 0x8000000, 0x20008, 0x208, 0x20000, 0x8020200, 0x8000200, 0x0, 0x200, 0x20008, 0x8020208, 0x8000200, 0x8000008, 0x200, 0x0, 0x8020008, 0x8000208, 0x20000, 0x8000000, 0x8020208, 0x8, 0x20208, 0x20200, 0x8000008, 0x8020000, 0x8000208, 0x208, 0x8020000, 0x20208, 0x8, 0x8020008, 0x20200),
        _0x550017 = new Array(0x802001, 0x2081, 0x2081, 0x80, 0x802080, 0x800081, 0x800001, 0x2001, 0x0, 0x802000, 0x802000, 0x802081, 0x81, 0x0, 0x800080, 0x800001, 0x1, 0x2000, 0x800000, 0x802001, 0x80, 0x800000, 0x2001, 0x2080, 0x800081, 0x1, 0x2080, 0x800080, 0x2000, 0x802080, 0x802081, 0x81, 0x800080, 0x800001, 0x802000, 0x802081, 0x81, 0x0, 0x0, 0x802000, 0x2080, 0x800080, 0x800081, 0x1, 0x802001, 0x2081, 0x2081, 0x80, 0x802081, 0x81, 0x1, 0x2000, 0x800001, 0x2001, 0x802080, 0x800081, 0x2001, 0x2080, 0x800000, 0x802001, 0x80, 0x800000, 0x2000, 0x802080),
        _0x43808c = new Array(0x100, 0x2080100, 0x2080000, 0x42000100, 0x80000, 0x100, 0x40000000, 0x2080000, 0x40080100, 0x80000, 0x2000100, 0x40080100, 0x42000100, 0x42080000, 0x80100, 0x40000000, 0x2000000, 0x40080000, 0x40080000, 0x0, 0x40000100, 0x42080100, 0x42080100, 0x2000100, 0x42080000, 0x40000100, 0x0, 0x42000000, 0x2080100, 0x2000000, 0x42000000, 0x80100, 0x80000, 0x42000100, 0x100, 0x2000000, 0x40000000, 0x2080000, 0x42000100, 0x40080100, 0x2000100, 0x40000000, 0x42080000, 0x2080100, 0x40080100, 0x100, 0x2000000, 0x42080000, 0x42080100, 0x80100, 0x42000000, 0x42080100, 0x2080000, 0x0, 0x40080000, 0x42000000, 0x80100, 0x2000100, 0x40000100, 0x80000, 0x0, 0x40080000, 0x2080100, 0x40000100),
        _0x51f6a3 = new Array(0x20000010, 0x20400000, 0x4000, 0x20404010, 0x20400000, 0x10, 0x20404010, 0x400000, 0x20004000, 0x404010, 0x400000, 0x20000010, 0x400010, 0x20004000, 0x20000000, 0x4010, 0x0, 0x400010, 0x20004010, 0x4000, 0x404000, 0x20004010, 0x10, 0x20400010, 0x20400010, 0x0, 0x404010, 0x20404000, 0x4010, 0x404000, 0x20404000, 0x20000000, 0x20004000, 0x10, 0x20400010, 0x404000, 0x20404010, 0x400000, 0x4010, 0x20000010, 0x400000, 0x20004000, 0x20000000, 0x4010, 0x20000010, 0x20404010, 0x404000, 0x20400000, 0x404010, 0x20404000, 0x0, 0x20400010, 0x10, 0x4000, 0x20400000, 0x404010, 0x4000, 0x400010, 0x20004010, 0x0, 0x20404000, 0x20000000, 0x400010, 0x20004010),
        _0x4dd752 = new Array(0x200000, 0x4200002, 0x4000802, 0x0, 0x800, 0x4000802, 0x200802, 0x4200800, 0x4200802, 0x200000, 0x0, 0x4000002, 0x2, 0x4000000, 0x4200002, 0x802, 0x4000800, 0x200802, 0x200002, 0x4000800, 0x4000002, 0x4200000, 0x4200800, 0x200002, 0x4200000, 0x800, 0x802, 0x4200802, 0x200800, 0x2, 0x4000000, 0x200800, 0x4000000, 0x200800, 0x200000, 0x4000802, 0x4000802, 0x4200002, 0x4200002, 0x2, 0x200002, 0x4000000, 0x4000800, 0x200000, 0x4200800, 0x802, 0x200802, 0x4200800, 0x802, 0x4000002, 0x4200802, 0x4200000, 0x200800, 0x0, 0x2, 0x4200802, 0x0, 0x200802, 0x4200000, 0x800, 0x4000002, 0x4000800, 0x800, 0x200002),
        _0x17b307 = new Array(0x10001040, 0x1000, 0x40000, 0x10041040, 0x10000000, 0x10001040, 0x40, 0x10000000, 0x40040, 0x10040000, 0x10041040, 0x41000, 0x10041000, 0x41040, 0x1000, 0x40, 0x10040000, 0x10000040, 0x10001000, 0x1040, 0x41000, 0x40040, 0x10040040, 0x10041000, 0x1040, 0x0, 0x0, 0x10040040, 0x10000040, 0x10001000, 0x41040, 0x40000, 0x41040, 0x40000, 0x10041000, 0x1000, 0x40, 0x10040040, 0x1000, 0x41040, 0x10001000, 0x40, 0x10000040, 0x10040000, 0x10040040, 0x10000000, 0x40000, 0x10001040, 0x0, 0x10041040, 0x40040, 0x10000040, 0x10040000, 0x10001000, 0x10001040, 0x0, 0x10041040, 0x41000, 0x41000, 0x1040, 0x1040, 0x40040, 0x10000000, 0x10041000),
        _0x58856a = function (_0x5948cc) {
            for (var _0x2e4a36, _0x595c89, _0x53b841, _0x4e1311 = new Array(0x0, 0x4, 0x20000000, 0x20000004, 0x10000, 0x10004, 0x20010000, 0x20010004, 0x200, 0x204, 0x20000200, 0x20000204, 0x10200, 0x10204, 0x20010200, 0x20010204), _0x150738 = new Array(0x0, 0x1, 0x100000, 0x100001, 0x4000000, 0x4000001, 0x4100000, 0x4100001, 0x100, 0x101, 0x100100, 0x100101, 0x4000100, 0x4000101, 0x4100100, 0x4100101), _0x9b1926 = new Array(0x0, 0x8, 0x800, 0x808, 0x1000000, 0x1000008, 0x1000800, 0x1000808, 0x0, 0x8, 0x800, 0x808, 0x1000000, 0x1000008, 0x1000800, 0x1000808), _0x9e9ff = new Array(0x0, 0x200000, 0x8000000, 0x8200000, 0x2000, 0x202000, 0x8002000, 0x8202000, 0x20000, 0x220000, 0x8020000, 0x8220000, 0x22000, 0x222000, 0x8022000, 0x8222000), _0x3486e9 = new Array(0x0, 0x40000, 0x10, 0x40010, 0x0, 0x40000, 0x10, 0x40010, 0x1000, 0x41000, 0x1010, 0x41010, 0x1000, 0x41000, 0x1010, 0x41010), _0x5a3a14 = new Array(0x0, 0x400, 0x20, 0x420, 0x0, 0x400, 0x20, 0x420, 0x2000000, 0x2000400, 0x2000020, 0x2000420, 0x2000000, 0x2000400, 0x2000020, 0x2000420), _0x6a85a3 = new Array(0x0, 0x10000000, 0x80000, 0x10080000, 0x2, 0x10000002, 0x80002, 0x10080002, 0x0, 0x10000000, 0x80000, 0x10080000, 0x2, 0x10000002, 0x80002, 0x10080002), _0x533aff = new Array(0x0, 0x10000, 0x800, 0x10800, 0x20000000, 0x20010000, 0x20000800, 0x20010800, 0x20000, 0x30000, 0x20800, 0x30800, 0x20020000, 0x20030000, 0x20020800, 0x20030800), _0x1e7263 = new Array(0x0, 0x40000, 0x0, 0x40000, 0x2, 0x40002, 0x2, 0x40002, 0x2000000, 0x2040000, 0x2000000, 0x2040000, 0x2000002, 0x2040002, 0x2000002, 0x2040002), _0x3b2b80 = new Array(0x0, 0x10000000, 0x8, 0x10000008, 0x0, 0x10000000, 0x8, 0x10000008, 0x400, 0x10000400, 0x408, 0x10000408, 0x400, 0x10000400, 0x408, 0x10000408), _0x55e552 = new Array(0x0, 0x20, 0x0, 0x20, 0x100000, 0x100020, 0x100000, 0x100020, 0x2000, 0x2020, 0x2000, 0x2020, 0x102000, 0x102020, 0x102000, 0x102020), _0x1f5140 = new Array(0x0, 0x1000000, 0x200, 0x1000200, 0x200000, 0x1200000, 0x200200, 0x1200200, 0x4000000, 0x5000000, 0x4000200, 0x5000200, 0x4200000, 0x5200000, 0x4200200, 0x5200200), _0x49e99a = new Array(0x0, 0x1000, 0x8000000, 0x8001000, 0x80000, 0x81000, 0x8080000, 0x8081000, 0x10, 0x1010, 0x8000010, 0x8001010, 0x80010, 0x81010, 0x8080010, 0x8081010), _0xa12154 = new Array(0x0, 0x4, 0x100, 0x104, 0x0, 0x4, 0x100, 0x104, 0x1, 0x5, 0x101, 0x105, 0x1, 0x5, 0x101, 0x105), _0xe8f81d = _0x5948cc['length'] > 0x8 ? 0x3 : 0x1, _0x317c65 = new Array(0x20 * _0xe8f81d), _0x341d29 = new Array(0x0, 0x0, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x0, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x0), _0x392a89 = 0x0, _0x572b1e = 0x0, _0x3eee68 = 0x0; _0x3eee68 < _0xe8f81d; _0x3eee68++) {
                var _0x11c972 = _0x5948cc['charCodeAt'](_0x392a89++) << 0x18 | _0x5948cc['charCodeAt'](_0x392a89++) << 0x10 | _0x5948cc['charCodeAt'](_0x392a89++) << 0x8 | _0x5948cc['charCodeAt'](_0x392a89++)
                    ,
                    _0x3206e5 = _0x5948cc['charCodeAt'](_0x392a89++) << 0x18 | _0x5948cc['charCodeAt'](_0x392a89++) << 0x10 | _0x5948cc['charCodeAt'](_0x392a89++) << 0x8 | _0x5948cc['charCodeAt'](_0x392a89++);
                _0x11c972 ^= (_0x53b841 = 0xf0f0f0f & (_0x11c972 >>> 0x4 ^ _0x3206e5)) << 0x4,
                    _0x11c972 ^= _0x53b841 = 0xffff & ((_0x3206e5 ^= _0x53b841) >>> -0x10 ^ _0x11c972),
                    _0x11c972 ^= (_0x53b841 = 0x33333333 & (_0x11c972 >>> 0x2 ^ (_0x3206e5 ^= _0x53b841 << -0x10))) << 0x2,
                    _0x11c972 ^= _0x53b841 = 0xffff & ((_0x3206e5 ^= _0x53b841) >>> -0x10 ^ _0x11c972),
                    _0x11c972 ^= (_0x53b841 = 0x55555555 & (_0x11c972 >>> 0x1 ^ (_0x3206e5 ^= _0x53b841 << -0x10))) << 0x1,
                    _0x11c972 ^= _0x53b841 = 0xff00ff & ((_0x3206e5 ^= _0x53b841) >>> 0x8 ^ _0x11c972),
                    _0x53b841 = (_0x11c972 ^= (_0x53b841 = 0x55555555 & (_0x11c972 >>> 0x1 ^ (_0x3206e5 ^= _0x53b841 << 0x8))) << 0x1) << 0x8 | (_0x3206e5 ^= _0x53b841) >>> 0x14 & 0xf0,
                    _0x11c972 = _0x3206e5 << 0x18 | _0x3206e5 << 0x8 & 0xff0000 | _0x3206e5 >>> 0x8 & 0xff00 | _0x3206e5 >>> 0x18 & 0xf0,
                    _0x3206e5 = _0x53b841;
                for (var _0x7570eb = 0x0; _0x7570eb < _0x341d29['length']; _0x7570eb++)
                    _0x341d29[_0x7570eb] ? (_0x11c972 = _0x11c972 << 0x2 | _0x11c972 >>> 0x1a,
                        _0x3206e5 = _0x3206e5 << 0x2 | _0x3206e5 >>> 0x1a) : (_0x11c972 = _0x11c972 << 0x1 | _0x11c972 >>> 0x1b,
                        _0x3206e5 = _0x3206e5 << 0x1 | _0x3206e5 >>> 0x1b),
                        _0x3206e5 &= -0xf,
                        _0x2e4a36 = _0x4e1311[(_0x11c972 &= -0xf) >>> 0x1c] | _0x150738[_0x11c972 >>> 0x18 & 0xf] | _0x9b1926[_0x11c972 >>> 0x14 & 0xf] | _0x9e9ff[_0x11c972 >>> 0x10 & 0xf] | _0x3486e9[_0x11c972 >>> 0xc & 0xf] | _0x5a3a14[_0x11c972 >>> 0x8 & 0xf] | _0x6a85a3[_0x11c972 >>> 0x4 & 0xf],
                        _0x595c89 = _0x533aff[_0x3206e5 >>> 0x1c] | _0x1e7263[_0x3206e5 >>> 0x18 & 0xf] | _0x3b2b80[_0x3206e5 >>> 0x14 & 0xf] | _0x55e552[_0x3206e5 >>> 0x10 & 0xf] | _0x1f5140[_0x3206e5 >>> 0xc & 0xf] | _0x49e99a[_0x3206e5 >>> 0x8 & 0xf] | _0xa12154[_0x3206e5 >>> 0x4 & 0xf],
                        _0x53b841 = 0xffff & (_0x595c89 >>> 0x10 ^ _0x2e4a36),
                        _0x317c65[_0x572b1e++] = _0x2e4a36 ^ _0x53b841,
                        _0x317c65[_0x572b1e++] = _0x595c89 ^ _0x53b841 << 0x10;
            }
            return _0x317c65;
        }(_0x6f7ccb), _0x1b389f = 0x0, _0x33d6c2 = _0x252245['length'], _0x4b32cf = 0x0,
        _0x5d7be0 = 0x20 == _0x58856a['length'] ? 0x3 : 0x9;
    _0x4e0044 = 0x3 == _0x5d7be0 ? _0x104ba1 ? new Array(0x0, 0x20, 0x2) : new Array(0x1e, -0x2, -0x2) : _0x104ba1 ? new Array(0x0, 0x20, 0x2, 0x3e, 0x1e, -0x2, 0x40, 0x60, 0x2) : new Array(0x5e, 0x3e, -0x2, 0x20, 0x40, 0x2, 0x1e, -0x2, -0x2),
        0x2 == _0x49168f ? _0x252245 += '\x20\x20\x20\x20\x20\x20\x20\x20' : 0x1 == _0x49168f ? (_0x387e5c = 0x8 - _0x33d6c2 % 0x8,
            _0x252245 += String['fromCharCode'](_0x387e5c, _0x387e5c, _0x387e5c, _0x387e5c, _0x387e5c, _0x387e5c, _0x387e5c, _0x387e5c),
        0x8 == _0x387e5c && (_0x33d6c2 += 0x8)) : _0x49168f || (_0x252245 += '\x00\x00\x00\x00\x00\x00\x00\x00');
    var _0xf835c5 = ''
        , _0x82c3cb = '';
    0x1 == _0x1aac56 && (_0x2abe13 = _0x446fff['charCodeAt'](_0x1b389f++) << 0x18 | _0x446fff['charCodeAt'](_0x1b389f++) << 0x10 | _0x446fff['charCodeAt'](_0x1b389f++) << 0x8 | _0x446fff['charCodeAt'](_0x1b389f++),
        _0x40eb43 = _0x446fff['charCodeAt'](_0x1b389f++) << 0x18 | _0x446fff['charCodeAt'](_0x1b389f++) << 0x10 | _0x446fff['charCodeAt'](_0x1b389f++) << 0x8 | _0x446fff['charCodeAt'](_0x1b389f++),
        _0x1b389f = 0x0);
    for (; _0x1b389f < _0x33d6c2;) {
        for (_0x39c632 = _0x252245['charCodeAt'](_0x1b389f++) << 0x18 | _0x252245['charCodeAt'](_0x1b389f++) << 0x10 | _0x252245['charCodeAt'](_0x1b389f++) << 0x8 | _0x252245['charCodeAt'](_0x1b389f++),
                 _0x59ae05 = _0x252245['charCodeAt'](_0x1b389f++) << 0x18 | _0x252245['charCodeAt'](_0x1b389f++) << 0x10 | _0x252245['charCodeAt'](_0x1b389f++) << 0x8 | _0x252245['charCodeAt'](_0x1b389f++),
             0x1 == _0x1aac56 && (_0x104ba1 ? (_0x39c632 ^= _0x2abe13,
                 _0x59ae05 ^= _0x40eb43) : (_0x5443e4 = _0x2abe13,
                 _0x1f93bf = _0x40eb43,
                 _0x2abe13 = _0x39c632,
                 _0x40eb43 = _0x59ae05)),
                 _0x39c632 ^= (_0x387e5c = 0xf0f0f0f & (_0x39c632 >>> 0x4 ^ _0x59ae05)) << 0x4,
                 _0x39c632 ^= (_0x387e5c = 0xffff & (_0x39c632 >>> 0x10 ^ (_0x59ae05 ^= _0x387e5c))) << 0x10,
                 _0x39c632 ^= _0x387e5c = 0x33333333 & ((_0x59ae05 ^= _0x387e5c) >>> 0x2 ^ _0x39c632),
                 _0x39c632 ^= _0x387e5c = 0xff00ff & ((_0x59ae05 ^= _0x387e5c << 0x2) >>> 0x8 ^ _0x39c632),
                 _0x39c632 = (_0x39c632 ^= (_0x387e5c = 0x55555555 & (_0x39c632 >>> 0x1 ^ (_0x59ae05 ^= _0x387e5c << 0x8))) << 0x1) << 0x1 | _0x39c632 >>> 0x1f,
                 _0x59ae05 = (_0x59ae05 ^= _0x387e5c) << 0x1 | _0x59ae05 >>> 0x1f,
                 _0x229ea9 = 0x0; _0x229ea9 < _0x5d7be0; _0x229ea9 += 0x3) {
            for (_0x29869b = _0x4e0044[_0x229ea9 + 0x1],
                     _0x2adfe8 = _0x4e0044[_0x229ea9 + 0x2],
                     _0x1ea114 = _0x4e0044[_0x229ea9]; _0x1ea114 != _0x29869b; _0x1ea114 += _0x2adfe8)
                _0x111fbd = _0x59ae05 ^ _0x58856a[_0x1ea114],
                    _0x56551c = (_0x59ae05 >>> 0x4 | _0x59ae05 << 0x1c) ^ _0x58856a[_0x1ea114 + 0x1],
                    _0x387e5c = _0x39c632,
                    _0x39c632 = _0x59ae05,
                    _0x59ae05 = _0x387e5c ^ (_0x3d7968[_0x111fbd >>> 0x18 & 0x3f] | _0x550017[_0x111fbd >>> 0x10 & 0x3f] | _0x51f6a3[_0x111fbd >>> 0x8 & 0x3f] | _0x17b307[0x3f & _0x111fbd] | _0x3dc4f7[_0x56551c >>> 0x18 & 0x3f] | _0x51f6fe[_0x56551c >>> 0x10 & 0x3f] | _0x43808c[_0x56551c >>> 0x8 & 0x3f] | _0x4dd752[0x3f & _0x56551c]);
            _0x387e5c = _0x39c632,
                _0x39c632 = _0x59ae05,
                _0x59ae05 = _0x387e5c;
        }
        _0x59ae05 = _0x59ae05 >>> 0x1 | _0x59ae05 << 0x1f,
            _0x59ae05 ^= _0x387e5c = 0x55555555 & ((_0x39c632 = _0x39c632 >>> 0x1 | _0x39c632 << 0x1f) >>> 0x1 ^ _0x59ae05),
            _0x59ae05 ^= (_0x387e5c = 0xff00ff & (_0x59ae05 >>> 0x8 ^ (_0x39c632 ^= _0x387e5c << 0x1))) << 0x8,
            _0x59ae05 ^= (_0x387e5c = 0x33333333 & (_0x59ae05 >>> 0x2 ^ (_0x39c632 ^= _0x387e5c))) << 0x2,
            _0x59ae05 ^= _0x387e5c = 0xffff & ((_0x39c632 ^= _0x387e5c) >>> 0x10 ^ _0x59ae05),
            _0x59ae05 ^= _0x387e5c = 0xf0f0f0f & ((_0x39c632 ^= _0x387e5c << 0x10) >>> 0x4 ^ _0x59ae05),
            _0x39c632 ^= _0x387e5c << 0x4,
        0x1 == _0x1aac56 && (_0x104ba1 ? (_0x2abe13 = _0x39c632,
            _0x40eb43 = _0x59ae05) : (_0x39c632 ^= _0x5443e4,
            _0x59ae05 ^= _0x1f93bf)),
            _0x82c3cb += String['fromCharCode'](_0x39c632 >>> 0x18, _0x39c632 >>> 0x10 & 0xff, _0x39c632 >>> 0x8 & 0xff, 0xff & _0x39c632, _0x59ae05 >>> 0x18, _0x59ae05 >>> 0x10 & 0xff, _0x59ae05 >>> 0x8 & 0xff, 0xff & _0x59ae05),
        0x200 == (_0x4b32cf += 0x8) && (_0xf835c5 += _0x82c3cb,
            _0x82c3cb = '',
            _0x4b32cf = 0x0);
    }
    return _0xf835c5 + _0x82c3cb;
}


function qizhidao_jiami(_0x1070bd) {

    _0x1f2a51 = {
        "appId": {
            "cipher": "DES",
            "is_encrypt": 1,
            "key": "0jdl8wt4",
            "obfuscated_name": "pe"
        },
        "box": {
            "is_encrypt": 0,
            "obfuscated_name": "ex"
        },
        "canvas": {
            "cipher": "DES",
            "is_encrypt": 1,
            "key": "qishzbcv",
            "obfuscated_name": "gk"
        },
        "clientSize": {
            "cipher": "DES",
            "is_encrypt": 1,
            "key": "nhybpg0o",
            "obfuscated_name": "tt"
        },
        "organization": {
            "cipher": "DES",
            "is_encrypt": 1,
            "key": "j649d086",
            "obfuscated_name": "fx"
        },
        "os": {
            "cipher": "DES",
            "is_encrypt": 1,
            "key": "pwkrq3yk",
            "obfuscated_name": "vq"
        },
        "platform": {
            "cipher": "DES",
            "is_encrypt": 1,
            "key": "kgx814bb",
            "obfuscated_name": "fb"
        },
        "plugins": {
            "cipher": "DES",
            "is_encrypt": 1,
            "key": "rnjj7v9c",
            "obfuscated_name": "rv"
        },
        "pmf": {
            "cipher": "DES",
            "is_encrypt": 1,
            "key": "7lurxns1",
            "obfuscated_name": "uq"
        },
        "protocol": {
            "is_encrypt": 0,
            "obfuscated_name": "protocol"
        },
        "referer": {
            "cipher": "DES",
            "is_encrypt": 1,
            "key": "279jt30h",
            "obfuscated_name": "sr"
        },
        "res": {
            "cipher": "DES",
            "is_encrypt": 1,
            "key": "1c0x94o4",
            "obfuscated_name": "np"
        },
        "rtype": {
            "cipher": "DES",
            "is_encrypt": 1,
            "key": "a9xbfg7y",
            "obfuscated_name": "fi"
        },
        "sdkver": {
            "cipher": "DES",
            "is_encrypt": 1,
            "key": "3na63cbf",
            "obfuscated_name": "vy"
        },
        "status": {
            "cipher": "DES",
            "is_encrypt": 1,
            "key": "ac30g08o",
            "obfuscated_name": "bg"
        },
        "subVersion": {
            "cipher": "DES",
            "is_encrypt": 1,
            "key": "arfglq06",
            "obfuscated_name": "kj"
        },
        "svm": {
            "cipher": "DES",
            "is_encrypt": 1,
            "key": "f3r0z9u7",
            "obfuscated_name": "ec"
        },
        "time": {
            "cipher": "DES",
            "is_encrypt": 1,
            "key": "5gkuqtjt",
            "obfuscated_name": "wm"
        },
        "timezone": {
            "cipher": "DES",
            "is_encrypt": 1,
            "key": "qve9v6q8",
            "obfuscated_name": "uh"
        },
        "tn": {
            "cipher": "DES",
            "is_encrypt": 1,
            "key": "0p4rikgw",
            "obfuscated_name": "ng"
        },
        "trees": {
            "cipher": "DES",
            "is_encrypt": 1,
            "key": "kgeyyu7y",
            "obfuscated_name": "sm"
        },
        "ua": {
            "cipher": "DES",
            "is_encrypt": 1,
            "key": "vokma8lq",
            "obfuscated_name": "vh"
        },
        "url": {
            "cipher": "DES",
            "is_encrypt": 1,
            "key": "4cnag588",
            "obfuscated_name": "hx"
        },
        "version": {
            "is_encrypt": 0,
            "obfuscated_name": "version"
        },
        "vpw": {
            "cipher": "DES",
            "is_encrypt": 1,
            "key": "6ipjiqra",
            "obfuscated_name": "ib"
        }
    }
    for (var _0x523cf7 in _0x1f2a51) {
        var _0x313def = d_0x1070bd[_0x523cf7];
        if (_0x1f2a51[_0x523cf7]['is_encrypt'] && null != _0x313def && '' !== _0x313def) {
            switch (_0x1f2a51[_0x523cf7]['cipher']) {
                case 'DES':
                    _0x313def = btoa(qizhidao_des(_0x1f2a51[_0x523cf7]['key'], ''['concat'](_0x313def), 0x1, 0x0))
            }
        }
        _0x1070bd[_0x1f2a51[_0x523cf7]['obfuscated_name']] = _0x313def;
        _0x523cf7 !== _0x1f2a51[_0x523cf7]['obfuscated_name'] && delete _0x1070bd[_0x523cf7];
    }
    return _0x1070bd;
}

function randomInt(lowNum, upNum) {
    var num = upNum - lowNum + 1;
    // Math.floor() 向下取整
    return Math.floor(Math.random() * num + lowNum);
}

function getRandomString(length) {
    let result = '';
    const characters = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789';
    const charactersLength = characters.length;
    for (let i = 0; i < length; i++) {
        result += characters.charAt(Math.floor(Math.random() * charactersLength));
    }
    return result;
}


function qzd_btoa(_0x2e0eeb) {
    function _0x3ed851(_0x2bded2) {
        this['message'] = _0x2bded2;
    }
    var _0x276da3 = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=';

    for (var _0x3315ce, _0x24f15a, _0x38e555 = String(_0x2e0eeb), _0x11e7f4 = 0x0, _0x1f1f9b = _0x276da3, _0x5927c7 = ''; _0x38e555['charAt'](0x0 | _0x11e7f4) || (_0x1f1f9b = '=',
    _0x11e7f4 % 0x1); _0x5927c7 += _0x1f1f9b['charAt'](0x3f & _0x3315ce >> 0x8 - _0x11e7f4 % 0x1 * 0x8)) {
        if ((_0x24f15a = _0x38e555['charCodeAt'](_0x11e7f4 += 0x3 / 0x4)) > 0xff)
            throw new _0x3ed851('\x27btoa\x27\x20failed:\x20The\x20string\x20to\x20be\x20encoded\x20contains\x20characters\x20outside\x20of\x20the\x20Latin1\x20range.');
        _0x3315ce = _0x3315ce << 0x8 | _0x24f15a;
    }
    return _0x5927c7;
}

function qzd_gzip_head() {
    time_now = new Date().getTime();
    d_0x1070bd = {
        "protocol": 21,
        "organization": "CSrn3Jcu7Q3n5GGcqTbb",
        "appId": "default",
        "os": "web",
        "version": "3.0.0",
        "sdkver": "3.0.0",
        "box": "",
        "rtype": "all",
        // "smid": "2023041710410337d22c8696775fd58c32806e7d49f16300bb379533fda2c00",
        "smid": getLocalsmid(),
        "subVersion": "1.0.0",
        "time": randomInt(100, 500),
        "plugins": "ChromePDFViewerPortableDocumentFormatinternal-pdf-viewer2,ChromiumPDFViewerPortableDocumentFormatinternal-pdf-viewer2,MicrosoftEdgePDFViewerPortableDocumentFormatinternal-pdf-viewer2,PDFViewerPortableDocumentFormatinternal-pdf-viewer2,WebKitbuilt-inPDFPortableDocumentFormatinternal-pdf-viewer2",
        // ua
        "ua": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/111.0.0.0 Safari/537.36",
        // "canvas": "56d39775",
        "canvas": getRandomString(8),
        "timezone": -480,
        "platform": "Win32",
        // 请求链接
        "url": "https://www.qizhidao.com/check?searchKey=%E6%98%86%E5%B1%B1%E9%BE%99%E8%85%BE%E5%85%89%E7%94%B5%E8%8",
        "referer": "",
        "res": "1920_1080_24_1",
        "clientSize": "0_0_1920_0_1920_1080_1920_1040",
        "status": "0010",
        // "vpw": "caace287-c8f4-44da-8743-ab47e1d6af72",
        "vpw": qizhidao_getLocalsmid_uuid(),
        // "svm": 1681699228576,
        "svm": time_now,
        // "trees": "9b0d9130-03c2-4a96-a397-2b81f73c6685",
        "trees": qizhidao_getLocalsmid_uuid(),
        // "pmf": 1681699228576,
        "pmf": time_now,
    };
    d_0x1070bd['tn'] = md5(qzd_0x18c848(d_0x1070bd));

    // console.log('d_0x1070bd', d_0x1070bd);
    var qzd_text = qizhidao_jiami(d_0x1070bd);

    qzd_text = JSON.stringify(qzd_text);

    qzd_text_gzip = '';
    zlib.gzip(qzd_text, (err, result) => {
        if (err) {
            console.error(err);
            return;
        }
        // qzd_btoa(result.toString());

        qzd_text_gzip = result.toString('base64');
        qzd_text_gzip = qzd_text_gzip.replace('AAACi', 'AAAAy');
        qzd_text_gzip = qzd_text_gzip.replace('AAACp', 'AAAA5');

        console.log(qzd_text_gzip);
        // return qzd_text_gzip
    });
}


module.exports = {
    qizhidao_getLocalsmid_uuid: qizhidao_getLocalsmid_uuid,
    getLocalsmid: getLocalsmid,
    getRandomString: getRandomString,
    randomInt: randomInt,
    qzd_0x18c848: qzd_0x18c848,
    qizhidao_jiami: qizhidao_jiami
};


// console.log(qzd_gzip_head());
// console.log(qizhidao_getLocalsmid_uuid())
