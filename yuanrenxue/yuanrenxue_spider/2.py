import requests
import execjs

et = execjs.compile("""
    function _0x583d0c(_0x43760e, _0x420d35) {
        var _0x1132ad = (0xffff & _0x43760e) + (0xffff & _0x420d35);
        return (_0x43760e >> 0x10) + (_0x420d35 >> 0x10) + (_0x1132ad >> 0x10) << 0x10 | 0xffff & _0x1132ad;
    }
    
    function _0x4014c7(_0x4304fc, _0xbb2615) {
        return _0x4304fc << _0xbb2615 | _0x4304fc >>> 0x20 - _0xbb2615;
    }
    
    function _0x414245(_0x3adb34, _0x123a0c, _0x206693, _0x3c23f4, _0x40b833, _0x2279d6) {
        return _0x583d0c(_0x4014c7(_0x583d0c(_0x583d0c(_0x123a0c, _0x3adb34), _0x583d0c(_0x3c23f4, _0x2279d6)), _0x40b833), _0x206693);
    }
    
    function _0x53a2b1(_0x47c788, _0x4001b1, _0x4af109, _0xbd5600, _0x33cb59, _0x3d75ff, _0x49e46e) {
        return _0x414245(_0x4001b1 & _0x4af109 | ~_0x4001b1 & _0xbd5600, _0x47c788, _0x4001b1, _0x33cb59, _0x3d75ff, _0x49e46e);
    }
    
    function _0xfc16e9(_0x169b20, _0x2b2ec5, _0x106be3, _0x4b4036, _0xe4d3f7, _0x1ccf17, _0x15b5c5) {
        return _0x414245(_0x2b2ec5 & _0x4b4036 | _0x106be3 & ~_0x4b4036, _0x169b20, _0x2b2ec5, _0xe4d3f7, _0x1ccf17, _0x15b5c5);
    }
    
    function _0x3597e7(_0x4ef7d7, _0x13a44e) {
        let _0x547682 = [0x63, 0x6f, 0x6e, 0x73, 0x6f, 0x6c, 0x65];
        let _0x43c0bd = "";
    
        for (let _0x1d9f07 = 0x0; _0x1d9f07 < _0x547682["length"]; _0x1d9f07++) {
            _0x43c0bd += String["fromCharCode"](_0x547682[_0x1d9f07]);
        }
    
        return _0x43c0bd;
    }
    
    function _0x3434a0(_0x38dafd, _0x2061ad, _0x186889, _0x2a164b, _0x4e04cd, _0x4a3d4f, _0x245a7a) {
        return _0x414245(_0x2061ad ^ _0x186889 ^ _0x2a164b, _0x38dafd, _0x2061ad, _0x4e04cd, _0x4a3d4f, _0x245a7a);
    }
    
    function _0x142b08(_0x33d2d4, _0x386601, _0x5b9991, _0x178024, _0x93b925, _0x458541, _0x18b7a7) {
        return _0x414245(_0x5b9991 ^ (_0x386601 | ~_0x178024), _0x33d2d4, _0x386601, _0x93b925, _0x458541, _0x18b7a7);
    }
    
    function _0x37d94f(_0x50c803, _0x595d48) {
        _0x50c803[_0x595d48 >> 0x5] |= 0x80 << _0x595d48 % 0x20, _0x50c803[0xe + (_0x595d48 + 0x40 >>> 0x9 << 0x4)] = _0x595d48;
    
        if (qz) {
            var _0x4a299e,
                _0x17d61a,
                _0x17fb5d,
                _0x2b1f5d,
                _0x1913f3,
                _0x4f57c5 = 0x67452301,
                _0x5c4d01 = -0x10325477,
                _0x34e8fa = -0x67452302,
                _0x4ef765 = 0x10325476;
        } else {
            var _0x4a299e,
                _0x17d61a,
                _0x17fb5d,
                _0x2b1f5d,
                _0x1913f3,
                _0x4f57c5 = 0x0,
                _0x5c4d01 = -0x0,
                _0x34e8fa = -0x0,
                _0x4ef765 = 0x0;
        }
    
        for (_0x4a299e = 0x0; _0x4a299e < _0x50c803["length"]; _0x4a299e += 0x10) _0x17d61a = _0x4f57c5, _0x17fb5d = _0x5c4d01, _0x2b1f5d = _0x34e8fa, _0x1913f3 = _0x4ef765, _0x4f57c5 = _0x53a2b1(_0x4f57c5, _0x5c4d01, _0x34e8fa, _0x4ef765, _0x50c803[_0x4a299e], 0x7, -0x28955b88), _0x4ef765 = _0x53a2b1(_0x4ef765, _0x4f57c5, _0x5c4d01, _0x34e8fa, _0x50c803[_0x4a299e + 0x1], 0xc, -0x173848aa), _0x34e8fa = _0x53a2b1(_0x34e8fa, _0x4ef765, _0x4f57c5, _0x5c4d01, _0x50c803[_0x4a299e + 0x2], 0x11, 0x242070db), _0x5c4d01 = _0x53a2b1(_0x5c4d01, _0x34e8fa, _0x4ef765, _0x4f57c5, _0x50c803[_0x4a299e + 0x3], 0x16, -0x3e423112), _0x4f57c5 = _0x53a2b1(_0x4f57c5, _0x5c4d01, _0x34e8fa, _0x4ef765, _0x50c803[_0x4a299e + 0x4], 0x7, -0xa83f051), _0x4ef765 = _0x53a2b1(_0x4ef765, _0x4f57c5, _0x5c4d01, _0x34e8fa, _0x50c803[_0x4a299e + 0x5], 0xc, 0x4787c62a), _0x34e8fa = _0x53a2b1(_0x34e8fa, _0x4ef765, _0x4f57c5, _0x5c4d01, _0x50c803[_0x4a299e + 0x6], 0x11, -0x57cfb9ed), _0x5c4d01 = _0x53a2b1(_0x5c4d01, _0x34e8fa, _0x4ef765, _0x4f57c5, _0x50c803[_0x4a299e + 0x7], 0x16, -0x2b96aff), _0x4f57c5 = _0x53a2b1(_0x4f57c5, _0x5c4d01, _0x34e8fa, _0x4ef765, _0x50c803[_0x4a299e + 0x8], 0x7, 0x698098d8), _0x4ef765 = _0x53a2b1(_0x4ef765, _0x4f57c5, _0x5c4d01, _0x34e8fa, _0x50c803[_0x4a299e + 0x9], 0xc, -0x74bb0851), _0x34e8fa = _0x53a2b1(_0x34e8fa, _0x4ef765, _0x4f57c5, _0x5c4d01, _0x50c803[_0x4a299e + 0xa], 0x11, -0xa44f), _0x5c4d01 = _0x53a2b1(_0x5c4d01, _0x34e8fa, _0x4ef765, _0x4f57c5, _0x50c803[_0x4a299e + 0xb], 0x16, -0x76a32842), _0x4f57c5 = _0x53a2b1(_0x4f57c5, _0x5c4d01, _0x34e8fa, _0x4ef765, _0x50c803[_0x4a299e + 0xc], 0x7, 0x6b901122), _0x4ef765 = _0x53a2b1(_0x4ef765, _0x4f57c5, _0x5c4d01, _0x34e8fa, _0x50c803[_0x4a299e + 0xd], 0xc, -0x2678e6d), _0x34e8fa = _0x53a2b1(_0x34e8fa, _0x4ef765, _0x4f57c5, _0x5c4d01, _0x50c803[_0x4a299e + 0xe], 0x11, -0x599429f2), _0x5c4d01 = _0x53a2b1(_0x5c4d01, _0x34e8fa, _0x4ef765, _0x4f57c5, _0x50c803[_0x4a299e + 0xf], 0x16, 0x49b40821), _0x4f57c5 = _0xfc16e9(_0x4f57c5, _0x5c4d01, _0x34e8fa, _0x4ef765, _0x50c803[_0x4a299e + 0x1], 0x5, -0x9e1da9e), _0x4ef765 = _0xfc16e9(_0x4ef765, _0x4f57c5, _0x5c4d01, _0x34e8fa, _0x50c803[_0x4a299e + 0x6], 0x9, -0x3fbf4cc0), _0x34e8fa = _0xfc16e9(_0x34e8fa, _0x4ef765, _0x4f57c5, _0x5c4d01, _0x50c803[_0x4a299e + 0xb], 0xe, 0x265e5a51), _0x5c4d01 = _0xfc16e9(_0x5c4d01, _0x34e8fa, _0x4ef765, _0x4f57c5, _0x50c803[_0x4a299e], 0x14, -0x16493856), _0x4f57c5 = _0xfc16e9(_0x4f57c5, _0x5c4d01, _0x34e8fa, _0x4ef765, _0x50c803[_0x4a299e + 0x5], 0x5, -0x29d0efa3), _0x4ef765 = _0xfc16e9(_0x4ef765, _0x4f57c5, _0x5c4d01, _0x34e8fa, _0x50c803[_0x4a299e + 0xa], 0x9, 0x2441453), _0x34e8fa = _0xfc16e9(_0x34e8fa, _0x4ef765, _0x4f57c5, _0x5c4d01, _0x50c803[_0x4a299e + 0xf], 0xe, -0x275e197f), _0x5c4d01 = _0xfc16e9(_0x5c4d01, _0x34e8fa, _0x4ef765, _0x4f57c5, _0x50c803[_0x4a299e + 0x4], 0x14, -0x182c0438), _0x4f57c5 = _0xfc16e9(_0x4f57c5, _0x5c4d01, _0x34e8fa, _0x4ef765, _0x50c803[_0x4a299e + 0x9], 0x5, 0x21e1cde6), _0x4ef765 = _0xfc16e9(_0x4ef765, _0x4f57c5, _0x5c4d01, _0x34e8fa, _0x50c803[_0x4a299e + 0xe], 0x9, -0x3cc8f82a), _0x34e8fa = _0xfc16e9(_0x34e8fa, _0x4ef765, _0x4f57c5, _0x5c4d01, _0x50c803[_0x4a299e + 0x3], 0xe, -0xb2af279), _0x5c4d01 = _0xfc16e9(_0x5c4d01, _0x34e8fa, _0x4ef765, _0x4f57c5, _0x50c803[_0x4a299e + 0x8], 0x14, 0x455a14ed), _0x4f57c5 = _0xfc16e9(_0x4f57c5, _0x5c4d01, _0x34e8fa, _0x4ef765, _0x50c803[_0x4a299e + 0xd], 0x5, -0x561c16fb), _0x4ef765 = _0xfc16e9(_0x4ef765, _0x4f57c5, _0x5c4d01, _0x34e8fa, _0x50c803[_0x4a299e + 0x2], 0x9, -0x3105c08), _0x34e8fa = _0xfc16e9(_0x34e8fa, _0x4ef765, _0x4f57c5, _0x5c4d01, _0x50c803[_0x4a299e + 0x7], 0xe, 0x676f02d9), _0x5c4d01 = _0xfc16e9(_0x5c4d01, _0x34e8fa, _0x4ef765, _0x4f57c5, _0x50c803[_0x4a299e + 0xc], 0x14, -0x72d5b376), _0x4f57c5 = _0x3434a0(_0x4f57c5, _0x5c4d01, _0x34e8fa, _0x4ef765, _0x50c803[_0x4a299e + 0x5], 0x4, -0x5c6be), _0x4ef765 = _0x3434a0(_0x4ef765, _0x4f57c5, _0x5c4d01, _0x34e8fa, _0x50c803[_0x4a299e + 0x8], 0xb, -0x788e097f), _0x34e8fa = _0x3434a0(_0x34e8fa, _0x4ef765, _0x4f57c5, _0x5c4d01, _0x50c803[_0x4a299e + 0xb], 0x10, 0x6d9d6122), _0x5c4d01 = _0x3434a0(_0x5c4d01, _0x34e8fa, _0x4ef765, _0x4f57c5, _0x50c803[_0x4a299e + 0xe], 0x17, -0x21ac7f4), _0x4f57c5 = _0x3434a0(_0x4f57c5, _0x5c4d01, _0x34e8fa, _0x4ef765, _0x50c803[_0x4a299e + 0x1], 0x4, -0x5b4115bc), _0x4ef765 = _0x3434a0(_0x4ef765, _0x4f57c5, _0x5c4d01, _0x34e8fa, _0x50c803[_0x4a299e + 0x4], 0xb, 0x4bdecfa9), _0x34e8fa = _0x3434a0(_0x34e8fa, _0x4ef765, _0x4f57c5, _0x5c4d01, _0x50c803[_0x4a299e + 0x7], 0x10, -0x944b4a0), _0x5c4d01 = _0x3434a0(_0x5c4d01, _0x34e8fa, _0x4ef765, _0x4f57c5, _0x50c803[_0x4a299e + 0xa], 0x17, -0x41404390), _0x4f57c5 = _0x3434a0(_0x4f57c5, _0x5c4d01, _0x34e8fa, _0x4ef765, _0x50c803[_0x4a299e + 0xd], 0x4, 0x289b7ec6), _0x4ef765 = _0x3434a0(_0x4ef765, _0x4f57c5, _0x5c4d01, _0x34e8fa, _0x50c803[_0x4a299e], 0xb, -0x155ed806), _0x34e8fa = _0x3434a0(_0x34e8fa, _0x4ef765, _0x4f57c5, _0x5c4d01, _0x50c803[_0x4a299e + 0x3], 0x10, -0x2b10cf7b), _0x5c4d01 = _0x3434a0(_0x5c4d01, _0x34e8fa, _0x4ef765, _0x4f57c5, _0x50c803[_0x4a299e + 0x6], 0x17, 0x4881d05), _0x4f57c5 = _0x3434a0(_0x4f57c5, _0x5c4d01, _0x34e8fa, _0x4ef765, _0x50c803[_0x4a299e + 0x9], 0x4, -0x262b2fc7), _0x4ef765 = _0x3434a0(_0x4ef765, _0x4f57c5, _0x5c4d01, _0x34e8fa, _0x50c803[_0x4a299e + 0xc], 0xb, -0x1924661b), _0x34e8fa = _0x3434a0(_0x34e8fa, _0x4ef765, _0x4f57c5, _0x5c4d01, _0x50c803[_0x4a299e + 0xf], 0x10, 0x1fa27cf8), _0x5c4d01 = _0x3434a0(_0x5c4d01, _0x34e8fa, _0x4ef765, _0x4f57c5, _0x50c803[_0x4a299e + 0x2], 0x17, -0x3b53a99b), _0x4f57c5 = _0x142b08(_0x4f57c5, _0x5c4d01, _0x34e8fa, _0x4ef765, _0x50c803[_0x4a299e], 0x6, -0xbd6ddbc), _0x4ef765 = _0x142b08(_0x4ef765, _0x4f57c5, _0x5c4d01, _0x34e8fa, _0x50c803[_0x4a299e + 0x7], 0xa, 0x432aff97), _0x34e8fa = _0x142b08(_0x34e8fa, _0x4ef765, _0x4f57c5, _0x5c4d01, _0x50c803[_0x4a299e + 0xe], 0xf, -0x546bdc59), _0x5c4d01 = _0x142b08(_0x5c4d01, _0x34e8fa, _0x4ef765, _0x4f57c5, _0x50c803[_0x4a299e + 0x5], 0x15, -0x36c5fc7), _0x4f57c5 = _0x142b08(_0x4f57c5, _0x5c4d01, _0x34e8fa, _0x4ef765, _0x50c803[_0x4a299e + 0xc], 0x6, 0x655b59c3), _0x4ef765 = _0x142b08(_0x4ef765, _0x4f57c5, _0x5c4d01, _0x34e8fa, _0x50c803[_0x4a299e + 0x3], 0xa, -0x70f3336e), _0x34e8fa = _0x142b08(_0x34e8fa, _0x4ef765, _0x4f57c5, _0x5c4d01, _0x50c803[_0x4a299e + 0xa], 0xf, -0x100b83), _0x5c4d01 = _0x142b08(_0x5c4d01, _0x34e8fa, _0x4ef765, _0x4f57c5, _0x50c803[_0x4a299e + 0x1], 0x15, -0x7a7ba22f), _0x4f57c5 = _0x142b08(_0x4f57c5, _0x5c4d01, _0x34e8fa, _0x4ef765, _0x50c803[_0x4a299e + 0x8], 0x6, 0x6fa87e4f), _0x4ef765 = _0x142b08(_0x4ef765, _0x4f57c5, _0x5c4d01, _0x34e8fa, _0x50c803[_0x4a299e + 0xf], 0xa, -0x1d31920), _0x34e8fa = _0x142b08(_0x34e8fa, _0x4ef765, _0x4f57c5, _0x5c4d01, _0x50c803[_0x4a299e + 0x6], 0xf, -0x5cfebcec), _0x5c4d01 = _0x142b08(_0x5c4d01, _0x34e8fa, _0x4ef765, _0x4f57c5, _0x50c803[_0x4a299e + 0xd], 0x15, 0x4e0811a1), _0x4f57c5 = _0x142b08(_0x4f57c5, _0x5c4d01, _0x34e8fa, _0x4ef765, _0x50c803[_0x4a299e + 0x4], 0x6, -0x8ac817e), _0x4ef765 = _0x142b08(_0x4ef765, _0x4f57c5, _0x5c4d01, _0x34e8fa, _0x50c803[_0x4a299e + 0xb], 0xa, -0x42c50dcb), _0x34e8fa = _0x142b08(_0x34e8fa, _0x4ef765, _0x4f57c5, _0x5c4d01, _0x50c803[_0x4a299e + 0x2], 0xf, 0x2ad7d2bb), _0x5c4d01 = _0x142b08(_0x5c4d01, _0x34e8fa, _0x4ef765, _0x4f57c5, _0x50c803[_0x4a299e + 0x9], 0x15, -0x14792c01), _0x4f57c5 = _0x583d0c(_0x4f57c5, _0x17d61a), _0x5c4d01 = _0x583d0c(_0x5c4d01, _0x17fb5d), _0x34e8fa = _0x583d0c(_0x34e8fa, _0x2b1f5d), _0x4ef765 = _0x583d0c(_0x4ef765, _0x1913f3);
    
        return [_0x4f57c5, _0x5c4d01, _0x34e8fa, _0x4ef765];
    }
    
    function _0x5f1728(_0x16a1cc) {
        var _0x525255,
            _0xb52800 = "",
            _0x354992 = 0x20 * _0x16a1cc["length"];
    
        for (_0x525255 = 0x0; _0x525255 < _0x354992; _0x525255 += 0x8) _0xb52800 += String["fromCharCode"](_0x16a1cc[_0x525255 >> 0x5] >>> _0x525255 % 0x20 & 0xff);
    
        return _0xb52800;
    }
    
    function _0x4f70e8(_0x3e3e24) {
        var _0x515cf6 = "1|3|4|2|0"["split"]("|");
    
        var _0x2136ca = 0x0;
    
        while (!![]) {
            switch (_0x515cf6[_0x2136ca++]) {
                case "0":
                    return _0x455984;
    
                case "1":
                    var _0x3def60,
                        _0x455984 = [];
    
                    continue;
    
                case "2":
                    for (_0x3def60 = 0x0; _0x3def60 < _0x2ae60d; _0x3def60 += 0x8) _0x455984[_0x3def60 >> 0x5] |= (0xff & _0x3e3e24["charCodeAt"](_0x3def60 / 0x8)) << _0x3def60 % 0x20;
    
                    continue;
    
                case "3":
                    for (_0x455984[(_0x3e3e24["length"] >> 0x2) - 0x1] = void 0x0, _0x3def60 = 0x0; _0x3def60 < _0x455984["length"]; _0x3def60 += 0x1) _0x455984[_0x3def60] = 0x0;
    
                    continue;
    
                case "4":
                    var _0x2ae60d = 0x8 * _0x3e3e24["length"];
    
                    continue;
            }
    
            break;
        }
    }
    
    function _0x54f1a8(_0x90d2fb) {
        return _0x5f1728(_0x37d94f(_0x4f70e8(_0x90d2fb), 0x8 * _0x90d2fb["length"]));
    }
    
    function _0x1a245f(_0x4fe04a) {
        var _0x41c4b5,
            _0x1cf0e3,
            _0x10ffc6 = "0123456789abcdef",
            _0x242697 = "";
    
        for (_0x1cf0e3 = 0x0; _0x1cf0e3 < _0x4fe04a["length"]; _0x1cf0e3 += 0x1) _0x41c4b5 = _0x4fe04a["charCodeAt"](_0x1cf0e3), _0x242697 += _0x10ffc6["charAt"](_0x41c4b5 >>> 0x4 & 0xf) + _0x10ffc6["charAt"](0xf & _0x41c4b5);
    
        return _0x242697;
    }
    
    function _0x2e7fec(_0x2683af) {
        return unescape(encodeURIComponent(_0x2683af));
    }
    
    function _0x333a7f(_0x357d94) {
        return _0x54f1a8(_0x2e7fec(_0x357d94));
    }
    
    function _0x57430c(_0x523a68) {
        return _0x1a245f(_0x333a7f(_0x523a68));
    }
    
    function _0x434cf4(_0x161072, _0x59a23c, _0x29a71b) {
        qz = [0xa, 0x63, 0x6f, 0x6e, 0x73, 0x6f, 0x6c, 0x65, 0x20, 0x3d, 0x20, 0x6e, 0x65, 0x77, 0x20, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x28, 0x29, 0xa, 0x63, 0x6f, 0x6e, 0x73, 0x6f, 0x6c, 0x65, 0x2e, 0x6c, 0x6f, 0x67, 0x20, 0x3d, 0x20, 0x66, 0x75, 0x6e, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x20, 0x28, 0x73, 0x29, 0x20, 0x7b, 0xa, 0x20, 0x20, 0x20, 0x20, 0x77, 0x68, 0x69, 0x6c, 0x65, 0x20, 0x28, 0x31, 0x29, 0x7b, 0xa, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6f, 0x72, 0x28, 0x69, 0x3d, 0x30, 0x3b, 0x69, 0x3c, 0x31, 0x31, 0x30, 0x30, 0x30, 0x30, 0x30, 0x3b, 0x69, 0x2b, 0x2b, 0x29, 0x7b, 0xa, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x68, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x2e, 0x70, 0x75, 0x73, 0x68, 0x53, 0x74, 0x61, 0x74, 0x65, 0x28, 0x30, 0x2c, 0x30, 0x2c, 0x69, 0x29, 0xa, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x7d, 0xa, 0x20, 0x20, 0x20, 0x20, 0x7d, 0xa, 0xa, 0x7d, 0xa, 0x63, 0x6f, 0x6e, 0x73, 0x6f, 0x6c, 0x65, 0x2e, 0x74, 0x6f, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x20, 0x3d, 0x20, 0x27, 0x5b, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x20, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x5d, 0x27, 0xa, 0x63, 0x6f, 0x6e, 0x73, 0x6f, 0x6c, 0x65, 0x2e, 0x6c, 0x6f, 0x67, 0x2e, 0x74, 0x6f, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x20, 0x3d, 0x20, 0x27, 0x192, 0x20, 0x74, 0x6f, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x28, 0x29, 0x20, 0x7b, 0x20, 0x5b, 0x6e, 0x61, 0x74, 0x69, 0x76, 0x65, 0x20, 0x63, 0x6f, 0x64, 0x65, 0x5d, 0x20, 0x7d, 0x27, 0xa];
        return _0x59a23c ? _0x29a71b ? _0x3597e7(_0x59a23c, _0x161072) : y(_0x59a23c, _0x161072) : _0x29a71b ? _0x333a7f(_0x161072) : _0x57430c(_0x161072);
    }
    
    function _0x5ef4ea(_0x5b9e6c, _0x520b7e) {
        console.log(_0x5b9e6c)
        return _0x434cf4(_0x5b9e6c) + '|' + _0x5b9e6c
    }
    
    function _0x41c192(_0x3db60e, _0xa5515) {
        return Date["parse"](new Date());
    }
    
    function get_cookie() {
        return _0x5ef4ea(_0x41c192());
    }
    
    //console.log((get_cookie()))
""")
cookie_m = et.call('get_cookie')

header = {
    'Cookie': f'm={cookie_m}',
    'Host': 'match.yuanrenxue.com',
    'Pragma': 'no-cache',
    'Referer': 'http://match.yuanrenxue.com/match/2',
    'User-Agent': 'Mozilla/5.0 (Windows NT 10.0; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/75.0.3770.90 Safari/537.36',
    'X-Requested-With': 'XMLHttpRequest'
}

dd = []
for i in range(5):
    res = requests.get(f'http://match.yuanrenxue.com/api/match/2?page={i + 1}', headers=header).json()
    for _i in res['data']:
        dd.append(_i['value'])

print(dd)
print(len(dd))
total = 0
for ele in range(0, len(dd)):
    total = total + dd[ele]
print("列表元素之和为: ", total)
